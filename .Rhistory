htmlreg(list(M1,M2,M3,M4,M5,M6), file = 'file.html')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6))
?texreg
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)'))
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)'))
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'))
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), label = 'Regression Output')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), star.symbol = '\*')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), star.symbol = '*')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), star.symbol = '\\*')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), symbol = '.')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), symbol = '.')
library(texreg)
htmlreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), star.symbol = '\\*')
library(texreg)
kable(htmlreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), star.symbol = '\\*'))
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), star.symbol='&#42;')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE)
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results')
library(kableExtra)
install.packages("kableExtra")
library(texreg)
screenreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3)
htmlreg(list(M1,M2,M3,M4,M5,M6), file = 'File.html',stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3)
htmlreg(list(M1,M2,M3,M4,M5,M6), file = 'File.html',stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, star.symbol = '&#42;')
htmlreg(list(M1,M2,M3,M4,M5,M6), file = 'File.html',stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, star.symbol = '\*')
htmlreg(list(M1,M2,M3,M4,M5,M6), file = 'File.html',stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, star.symbol = '\\*')
htmlreg(list(M1,M2,M3,M4,M5,M6), file = 'File.html',stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, star.symbol = '&#42;')
install.packages("kableExtra")
install.packages("kableExtra")
install.packages('kableExtra', dependencies = TRUE)
library(stargazer)
stargazer(M1, M2, M3, M4, M6, M6, out = 'Reg.html')
library(readr)
library(readxl)
library(tseries)
#library(forecast)
library(reshape)
library(astsa)
library(caschrono)
library(urca)
library(car)
library(knitr)
library(dplyr)
library(pastecs)
library(knitr)
library(extrafont)
font_import(pattern = 'lmodern*', prompt = FALSE, paths = '/home/vani/Documents/AUA/Special Topics/Group Project')
loadfonts(device = "pdf")
options(scipen = 999)
data<-read.csv("Data.csv")
data <- data[,c(2,18,21,22,23,24)]
StatTable<- stat.desc(data)
data$Armenia <- log(data$Armenia/lag(data$Armenia,n=4))
data$Russia <- log(data$Russia/lag(data$Russia, n=4))
data$PartnerGDP <- log(data$PartnerGDP/lag(data$PartnerGDP, n=4))
data$CrudeOil <- log(data$CrudeOil/lag(data$CrudeOil, n=4))
data$NaturalGas <- log(data$NaturalGas/lag(data$NaturalGas, n=4))
data$Remittances <- log(data$Remittances/lag(data$Remittances, n=4))
data <- data[-c(1:4),]
DataTS <- ts(data)
forCorr <- data[,c('Armenia','Russia','PartnerGDP','CrudeOil','NaturalGas')]
CorrMatrix<-cor(forCorr)
ArmTS <- ts(data$Armenia, start = 2000, frequency = 4)
RusTS <- ts(data$Russia, start = 2000, frequency = 4)
PartnerTS <- ts(data$PartnerGDP, start = 2000, frequency = 4)
OilTS <- ts(data$CrudeOil, start = 2000, frequency = 4)
GasTS <- ts(data$NaturalGas, start = 2000, frequency = 4)
RemittancesTS <- ts(data$Remittances, start = 2000, frequency = 4)
ArmDF <-ur.df(ArmTS, type = 'trend')
ArmDFCval <- t(ArmDF@cval)[2,]
Arm.Stat <- ArmDF@teststat
rownames(Arm.Stat) <- 'Armenia Test Statistic'
PartnerDF <-ur.df(PartnerTS, type = 'drift')
PartnerDFCval <- t(PartnerDF@cval)[2,]
Partner.Stat <- PartnerDF@teststat
rownames(Partner.Stat) <- 'Partner Test Statistic'
OilDF <-ur.df(OilTS, type = 'trend')
OilDFCval <- t(OilDF@cval)[2,]
Oil.Stat <- OilDF@teststat
rownames(Oil.Stat) <- 'Oil Test Statistic'
GasDF <-ur.df(GasTS, type = 'trend')
GasDFCval <- t(GasDF@cval)[2,]
Gas.Stat <- GasDF@teststat
rownames(Gas.Stat) <- 'Gas Test Statistic'
RemDF <-ur.df(GasTS, type = 'trend')
RemDFCval <- t(RemDF@cval)[2,]
Rem.Stat <- RemDF@teststat
rownames(Rem.Stat) <- 'Remittances Test Statistic'
ArmDFL2 <-ur.df(ArmTS, lags = 2, type = 'trend')
ArmDFCvalL2 <- t(ArmDFL2@cval)[2,]
Arm.StatL2 <- ArmDFL2@teststat
rownames(Arm.StatL2) <- 'Armenia Test Statistic (Lag 2)'
xReg1<-matrix(c(PartnerTS,GasTS),ncol=2,byrow = F, dimnames = list(1:68,c('PartnerTS','GasTS')))
xReg2<-matrix(c(PartnerTS,OilTS),ncol=2,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS')))
xReg3<-matrix(c(PartnerTS,OilTS,GasTS),ncol=3,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS','GasTS')))
xReg4<-matrix(c(PartnerTS,OilTS,GasTS,RemittancesTS),ncol=4,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS','GasTS','RemittancesTS')))
M1<-arima(ArmTS, order=c(2,0,1))
M1SW <- shapiro.test(M1$residuals)
P.ValueM1 <- M1SW$p.value
M2<-arima(ArmTS, order=c(2,0,3), xreg = PartnerTS)
M2SW <- shapiro.test(M2$residuals)
P.ValueM2 <- M2SW$p.value
M3<-arima(ArmTS, order=c(2,0,2), xreg = xReg1)
M3SW <- shapiro.test(M3$residuals)
P.ValueM3 <- M3SW$p.value
M4<-arima(ArmTS, order=c(1,0,1), xreg = xReg2)
M4SW <- shapiro.test(M4$residuals)
P.ValueM4 <- M4SW$p.value
M5<-arima(ArmTS, order=c(2,0,1), xreg = xReg3)
M5SW <- shapiro.test(M5$residuals)
P.ValueM5 <- M5SW$p.value
M6<-arima(ArmTS, order=c(3,0,1), xreg = xReg4)
M6SW <- shapiro.test(M6$residuals)
P.ValueM6 <- M6SW$p.value
M3LH <- linearHypothesis(M3, c('PartnerTS=0','GasTS=0'))
M4LH <- linearHypothesis(M4, c('PartnerTS=0','OilTS=0'))
M5LH <- linearHypothesis(M5, c('PartnerTS=0','OilTS=0','GasTS=0'))
M6LH.1 <- linearHypothesis(M6, c('PartnerTS=0', 'RemittancesTS=0'))
M6LH <- linearHypothesis(M6, c('PartnerTS=0','OilTS=0','GasTS=0', 'RemittancesTS=0'))
P.ValueM3LH <- M3LH$`Pr(>Chisq)`[2]
P.ValueM4LH <- M4LH$`Pr(>Chisq)`[2]
P.ValueM5LH <- M5LH$`Pr(>Chisq)`[2]
P.ValueM6LH <- M6LH$`Pr(>Chisq)`[2]
P.ValueM6LH.1 <- M6LH.1$`Pr(>Chisq)`[2]
JointHypothesis <- c(P.ValueM3LH,P.ValueM4LH,P.ValueM5LH,P.ValueM6LH,P.ValueM6LH.1)
JointHypothesis <- t(as.matrix(JointHypothesis))
rownames(JointHypothesis) <- 'Joint Hypothesis Tests (P-Values)'
colnames(JointHypothesis) <- c('Model 3','Model 4','Model 5','Model 6', 'Model 6.1')
#M6Forecast <- forecast(M6, xreg = xReg4[c(1:12),])
library(stargazer)
stargazer(M1, M2, M3, M4, M6, M6, out = 'Reg.html')
?stargazer
stargazer(M1, M2, M3, M4, M6, M6, out = 'Reg.html', title = 'ARIMA/ARIMAX Output', dep.var.caption = 'Armenian GDP',covariate.labels = c('AR(1)','AR(2)','AR(3)','MA(1)','MA(2)','MA(3)','Intercept','Partner GDP', 'Natural Gas Prices', 'Armenian Inward Remittances', 'Crude Oil Prices'))
stargazer(M1, M2, M3, M4, M6, M6, out = 'Reg.html', title = 'ARIMA/ARIMAX Output', dep.var.labels = 'Armenian GDP',covariate.labels = c('AR(1)','AR(2)','AR(3)','MA(1)','MA(2)','MA(3)','Intercept','Partner GDP', 'Natural Gas Prices', 'Armenian Inward Remittances', 'Crude Oil Prices'))
install.packages('hms')
install.packages("hms")
install.packages('kableExtra')
install.packages('httr')
install.packages('openssl')
install.packages('kableExtra', repos='https://cran.ma.imperial.ac.uk/')
View(data)
forCorr <- data[,c('Armenia','Russia','PartnerGDP','CrudeOil','NaturalGas','Remittances')]
CorrMatrix<-cor(forCorr)
kable(CorrMatrix)
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, use.packages = FALSE, ymbol = "\\circ")
library(texreg)
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, stars.symbol = '\\*')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, stars.symbol = '\*')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, stars.symbol = '**')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), stars = c(0.001, 0.01, 0.05), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3, stars.symbol = 'x')
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3)
kable(JointHypothesis)
library(readr)
library(readxl)
library(tseries)
library(forecast)
library(reshape)
library(astsa)
library(caschrono)
library(urca)
library(car)
library(knitr)
library(dplyr)
library(pastecs)
library(knitr)
library(extrafont)
font_import(pattern = 'lmodern*', prompt = FALSE, paths = '/home/vani/Documents/AUA/Special Topics/Group Project')
loadfonts(device = "pdf")
options(scipen = 999)
data<-read.csv("Data.csv")
data <- data[,c(2,18,21,22,23,24)]
StatTable<- stat.desc(data)
data$Armenia <- log(data$Armenia/lag(data$Armenia,n=4))
data$Russia <- log(data$Russia/lag(data$Russia, n=4))
data$PartnerGDP <- log(data$PartnerGDP/lag(data$PartnerGDP, n=4))
data$CrudeOil <- log(data$CrudeOil/lag(data$CrudeOil, n=4))
data$NaturalGas <- log(data$NaturalGas/lag(data$NaturalGas, n=4))
data$Remittances <- log(data$Remittances/lag(data$Remittances, n=4))
data <- data[-c(1:4),]
DataTS <- ts(data)
forCorr <- data[,c('Armenia','Russia','PartnerGDP','CrudeOil','NaturalGas','Remittances')]
CorrMatrix<-cor(forCorr)
ArmTS <- ts(data$Armenia, start = 2000, frequency = 4)
RusTS <- ts(data$Russia, start = 2000, frequency = 4)
PartnerTS <- ts(data$PartnerGDP, start = 2000, frequency = 4)
OilTS <- ts(data$CrudeOil, start = 2000, frequency = 4)
GasTS <- ts(data$NaturalGas, start = 2000, frequency = 4)
RemittancesTS <- ts(data$Remittances, start = 2000, frequency = 4)
ArmDF <-ur.df(ArmTS, type = 'trend')
ArmDFCval <- t(ArmDF@cval)[2,]
Arm.Stat <- ArmDF@teststat
rownames(Arm.Stat) <- 'Armenia Test Statistic'
PartnerDF <-ur.df(PartnerTS, type = 'drift')
PartnerDFCval <- t(PartnerDF@cval)[2,]
Partner.Stat <- PartnerDF@teststat
rownames(Partner.Stat) <- 'Partner Test Statistic'
OilDF <-ur.df(OilTS, type = 'trend')
OilDFCval <- t(OilDF@cval)[2,]
Oil.Stat <- OilDF@teststat
rownames(Oil.Stat) <- 'Oil Test Statistic'
GasDF <-ur.df(GasTS, type = 'trend')
GasDFCval <- t(GasDF@cval)[2,]
Gas.Stat <- GasDF@teststat
rownames(Gas.Stat) <- 'Gas Test Statistic'
RemDF <-ur.df(GasTS, type = 'trend')
RemDFCval <- t(RemDF@cval)[2,]
Rem.Stat <- RemDF@teststat
rownames(Rem.Stat) <- 'Remittances Test Statistic'
ArmDFL2 <-ur.df(ArmTS, lags = 2, type = 'trend')
ArmDFCvalL2 <- t(ArmDFL2@cval)[2,]
Arm.StatL2 <- ArmDFL2@teststat
rownames(Arm.StatL2) <- 'Armenia Test Statistic (Lag 2)'
xReg1<-matrix(c(PartnerTS,GasTS),ncol=2,byrow = F, dimnames = list(1:68,c('PartnerTS','GasTS')))
xReg2<-matrix(c(PartnerTS,OilTS),ncol=2,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS')))
xReg3<-matrix(c(PartnerTS,OilTS,GasTS),ncol=3,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS','GasTS')))
xReg4<-matrix(c(PartnerTS,OilTS,GasTS,RemittancesTS),ncol=4,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS','GasTS','RemittancesTS')))
M1<-arima(ArmTS, order=c(2,0,1))
M1SW <- shapiro.test(M1$residuals)
P.ValueM1 <- M1SW$p.value
M2<-arima(ArmTS, order=c(2,0,3), xreg = PartnerTS)
M2SW <- shapiro.test(M2$residuals)
P.ValueM2 <- M2SW$p.value
M3<-arima(ArmTS, order=c(2,0,2), xreg = xReg1)
M3SW <- shapiro.test(M3$residuals)
P.ValueM3 <- M3SW$p.value
M4<-arima(ArmTS, order=c(1,0,1), xreg = xReg2)
M4SW <- shapiro.test(M4$residuals)
P.ValueM4 <- M4SW$p.value
M5<-arima(ArmTS, order=c(2,0,1), xreg = xReg3)
M5SW <- shapiro.test(M5$residuals)
P.ValueM5 <- M5SW$p.value
M6<-arima(ArmTS, order=c(3,0,1), xreg = xReg4)
M6SW <- shapiro.test(M6$residuals)
P.ValueM6 <- M6SW$p.value
M3LH <- linearHypothesis(M3, c('PartnerTS=0','GasTS=0'))
M4LH <- linearHypothesis(M4, c('PartnerTS=0','OilTS=0'))
M5LH <- linearHypothesis(M5, c('PartnerTS=0','OilTS=0','GasTS=0'))
M6LH.1 <- linearHypothesis(M6, c('PartnerTS=0', 'RemittancesTS=0'))
M6LH <- linearHypothesis(M6, c('PartnerTS=0','OilTS=0','GasTS=0'))
P.ValueM3LH <- M3LH$`Pr(>Chisq)`[2]
P.ValueM4LH <- M4LH$`Pr(>Chisq)`[2]
P.ValueM5LH <- M5LH$`Pr(>Chisq)`[2]
P.ValueM6LH <- M6LH$`Pr(>Chisq)`[2]
P.ValueM6LH.1 <- M6LH.1$`Pr(>Chisq)`[2]
JointHypothesis <- c(P.ValueM3LH,P.ValueM4LH,P.ValueM5LH,P.ValueM6LH,P.ValueM6LH.1)
JointHypothesis <- t(as.matrix(JointHypothesis))
rownames(JointHypothesis) <- 'Joint Hypothesis Tests (P-Values)'
colnames(JointHypothesis) <- c('Model 3','Model 4','Model 5','Model 6', 'Model 6.1')
M6Forecast <- forecast(M6, xreg = xReg4[c(1:12),])
kable(CorrMatrix)
kable(StatTable[c(4,5,6,8,9,12,13),])
par(family = "LM Roman 10")
plot(ArmTS, main = 'Armenian GDP', ylab = 'Armenia')
plot(PartnerTS, main = 'Export Partners GDP', ylab = 'Export Partner Countries Index')
plot(OilTS, main = 'Crude Oil Prices', ylab = 'Oil Prices')
plot(GasTS, main = 'Natural Gas Prices', ylab = 'Gas Prices')
plot(RemittancesTS, main = 'Remittances to Armenia', ylab = 'Remittances')
C.Values <- GasDFCval
kable(rbind(C.Values, Arm.Stat, Gas.Stat, Oil.Stat, Rem.Stat))
C.Values <- PartnerDFCval
kable(rbind(C.Values, Partner.Stat))
par(family = "LM Roman 10")
invisible(acf2(ArmTS))
par(family = "LM Roman 10")
plot(M1)
invisible(acf2(M1$residuals))
par(family = "LM Roman 10")
plot(M2)
invisible(acf2(M2$residuals))
par(family = "LM Roman 10")
plot(M3)
invisible(acf2(M3$residuals))
par(family = "LM Roman 10")
plot(M4)
invisible(acf2(M4$residuals))
par(family = "LM Roman 10")
plot(M5)
invisible(acf2(M5$residuals))
par(family = "LM Roman 10")
plot(M6)
invisible(acf2(M6$residuals))
ShapiroWilk <- c(P.ValueM1, P.ValueM2, P.ValueM3, P.ValueM4, P.ValueM5, P.ValueM6)
ShapiroWilk <- t(as.matrix(ShapiroWilk))
rownames(ShapiroWilk) <- 'Shapiro Wilk Normality Test (P-Values)'
colnames(ShapiroWilk) <- c('Model 1','Model 2','Model 3','Model 4','Model 5','Model 6')
kable(ShapiroWilk)
kable(JointHypothesis)
C.Values <- ArmDFCvalL2
kable(rbind(C.Values, Arm.StatL2))
data$Residuals <- M6$residuals
data$Fitted <- data$Armenia - data$Residuals
FittedActual <- data[,c(1,8)]
kable(tail(exp(FittedActual)-1,8))
FittedTS <- ts(data$Fitted, start = 2000, frequency = 4)
par(family = "LM Roman 10")
ts.plot(ArmTS, FittedTS, gpars = list(col = c("black", "lightslategray")))
par(family = "LM Roman 10")
plot(forecast(M5, xreg = xReg3[1:12,]))
library(texreg)
texreg(list(M1,M2,M3,M4,M5,M6), custom.coef.map = list('ar1' = 'AR(1)', 'ar2' = 'AR(2)', 'ar3' = 'AR(3)', 'ma1' = 'MA(1)', 'ma2' = 'MA(2)', 'ma3' = 'MA(3)', 'intercept' = 'Intercept', 'PartnerTS' = 'Partner GDP', 'GasTS' = 'Natural Gas' , 'OilTS' = 'Crude Oil', 'RemittancesTS' = 'Armenian Inward Remittances'), caption.above = TRUE, caption = 'Regression Results', digits = 3)
kable(CorrMatrix)
ArmDFL3 <-ur.df(ArmTS, lags = 3, type = 'trend')
ArmDFCvalL3 <- t(ArmDFL2@cval)[2,]
Arm.StatL3 <- ArmDFL3@teststat
rownames(Arm.StatL3) <- 'Armenia Test Statistic (Lag 3)'
C.Values <- ArmDFCvalL2
kable(rbind(C.Values, Arm.StatL2, Arm.StatL3))
par(family = "LM Roman 10")
plot(ArmTS, main = 'Armenian GDP', ylab = 'Armenia')
plot(PartnerTS, main = 'Export Partners GDP', ylab = 'Export Partner Countries Index')
plot(OilTS, main = 'Crude Oil Prices', ylab = 'Oil Prices')
plot(GasTS, main = 'Natural Gas Prices', ylab = 'Gas Prices')
plot(RemittancesTS, main = 'Remittances to Armenia', ylab = 'Remittances')
plot(stl(ArmTS))
par(family = "LM Roman 10")
plot(ArmTS, main = 'Armenian GDP', ylab = 'Armenia')
plot(PartnerTS, main = 'Export Partners GDP', ylab = 'Export Partner Countries Index')
plot(OilTS, main = 'Crude Oil Prices', ylab = 'Oil Prices')
plot(GasTS, main = 'Natural Gas Prices', ylab = 'Gas Prices')
plot(RemittancesTS, main = 'Remittances to Armenia', ylab = 'Remittances')
plot(stl(ArmTS, s.window = 'periodic'))
plot(stl(RusTS, s.window = 'periodic'))
plot(stl(ArmTS, s.window = 'periodic', main = 'STI Decomposition of Armenian GDP'))
plot(stl(ArmTS, s.window = 'periodic'), main = 'STI Decomposition of Armenian GDP')
par(family = "LM Roman 10")
plot(ArmTS, main = 'Armenian GDP', ylab = 'Armenia')
plot(PartnerTS, main = 'Export Partners GDP', ylab = 'Export Partner Countries Index')
plot(OilTS, main = 'Crude Oil Prices', ylab = 'Oil Prices')
plot(GasTS, main = 'Natural Gas Prices', ylab = 'Gas Prices')
plot(RemittancesTS, main = 'Remittances to Armenia', ylab = 'Remittances')
plot(stl(ArmTS, s.window = 'periodic'), main = 'STI Decomposition of Armenian GDP')
plot(stl(RusTS, s.window = 'periodic'), main = 'STI Decomposition of Armenian GDP')
kable(JointHypothesis)
data$Fitted <- data$Armenia - M6$residuals
FittedTS <- ts(data$Fitted, start = 2000, frequency = 4)
par(family = "LM Roman 10")
ts.plot(ArmTS, FittedTS, main = 'Actual vs Fitted Armenian GDP',gpars = list(col = c("black", "lightslategray")))
par(family = "LM Roman 10")
plot(FittedTS,forecast(M5, xreg = xReg3[1:12,]), main = 'Forecast Based on Model 6')
?fig.pos
??fig.pos
library(readr)
library(readxl)
library(tseries)
library(forecast)
library(reshape)
library(astsa)
library(caschrono)
library(urca)
library(car)
library(knitr)
library(dplyr)
library(pastecs)
library(knitr)
library(extrafont)
font_import(pattern = 'lmodern*', prompt = FALSE, paths = '.')
loadfonts(device = "pdf")
options(scipen = 999)
data<-read.csv("Data.csv")
data <- data[,c(2,18,21,22,23,24)]
StatTable<- stat.desc(data)
data$Armenia <- log(data$Armenia/lag(data$Armenia,n=4))
data$Russia <- log(data$Russia/lag(data$Russia, n=4))
data$PartnerGDP <- log(data$PartnerGDP/lag(data$PartnerGDP, n=4))
data$CrudeOil <- log(data$CrudeOil/lag(data$CrudeOil, n=4))
data$NaturalGas <- log(data$NaturalGas/lag(data$NaturalGas, n=4))
data$Remittances <- log(data$Remittances/lag(data$Remittances, n=4))
data <- data[-c(1:4),]
DataTS <- ts(data)
forCorr <- data[,c('Armenia','Russia','PartnerGDP','CrudeOil','NaturalGas','Remittances')]
CorrMatrix<-cor(forCorr)
ArmTS <- ts(data$Armenia, start = 2000, frequency = 4)
RusTS <- ts(data$Russia, start = 2000, frequency = 4)
PartnerTS <- ts(data$PartnerGDP, start = 2000, frequency = 4)
OilTS <- ts(data$CrudeOil, start = 2000, frequency = 4)
GasTS <- ts(data$NaturalGas, start = 2000, frequency = 4)
RemittancesTS <- ts(data$Remittances, start = 2000, frequency = 4)
ArmDF <-ur.df(ArmTS, type = 'trend')
ArmDFCval <- t(ArmDF@cval)[2,]
Arm.Stat <- ArmDF@teststat
rownames(Arm.Stat) <- 'Armenia Test Statistic'
PartnerDF <-ur.df(PartnerTS, type = 'drift')
PartnerDFCval <- t(PartnerDF@cval)[2,]
Partner.Stat <- PartnerDF@teststat
rownames(Partner.Stat) <- 'Partner Test Statistic'
OilDF <-ur.df(OilTS, type = 'trend')
OilDFCval <- t(OilDF@cval)[2,]
Oil.Stat <- OilDF@teststat
rownames(Oil.Stat) <- 'Oil Test Statistic'
GasDF <-ur.df(GasTS, type = 'trend')
GasDFCval <- t(GasDF@cval)[2,]
Gas.Stat <- GasDF@teststat
rownames(Gas.Stat) <- 'Gas Test Statistic'
RemDF <-ur.df(GasTS, type = 'trend')
RemDFCval <- t(RemDF@cval)[2,]
Rem.Stat <- RemDF@teststat
rownames(Rem.Stat) <- 'Remittances Test Statistic'
ArmDFL2 <-ur.df(ArmTS, lags = 2, type = 'trend')
ArmDFCvalL2 <- t(ArmDFL2@cval)[2,]
Arm.StatL2 <- ArmDFL2@teststat
rownames(Arm.StatL2) <- 'Armenia Test Statistic (Lag 2)'
ArmDFL3 <-ur.df(ArmTS, lags = 3, type = 'trend')
ArmDFCvalL3 <- t(ArmDFL2@cval)[2,]
Arm.StatL3 <- ArmDFL3@teststat
rownames(Arm.StatL3) <- 'Armenia Test Statistic (Lag 3)'
xReg1<-matrix(c(PartnerTS,GasTS),ncol=2,byrow = F, dimnames = list(1:68,c('PartnerTS','GasTS')))
xReg2<-matrix(c(PartnerTS,OilTS),ncol=2,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS')))
xReg3<-matrix(c(PartnerTS,OilTS,GasTS),ncol=3,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS','GasTS')))
xReg4<-matrix(c(PartnerTS,OilTS,GasTS,RemittancesTS),ncol=4,byrow = F, dimnames = list(1:68,c('PartnerTS','OilTS','GasTS','RemittancesTS')))
M1<-arima(ArmTS, order=c(2,0,1))
M1SW <- shapiro.test(M1$residuals)
P.ValueM1 <- M1SW$p.value
M2<-arima(ArmTS, order=c(2,0,3), xreg = PartnerTS)
M2SW <- shapiro.test(M2$residuals)
P.ValueM2 <- M2SW$p.value
M3<-arima(ArmTS, order=c(2,0,2), xreg = xReg1)
M3SW <- shapiro.test(M3$residuals)
P.ValueM3 <- M3SW$p.value
M4<-arima(ArmTS, order=c(1,0,1), xreg = xReg2)
M4SW <- shapiro.test(M4$residuals)
P.ValueM4 <- M4SW$p.value
M5<-arima(ArmTS, order=c(2,0,1), xreg = xReg3)
M5SW <- shapiro.test(M5$residuals)
P.ValueM5 <- M5SW$p.value
M6<-arima(ArmTS, order=c(3,0,1), xreg = xReg4)
M6SW <- shapiro.test(M6$residuals)
P.ValueM6 <- M6SW$p.value
M3LH <- linearHypothesis(M3, c('PartnerTS=0','GasTS=0'))
M4LH <- linearHypothesis(M4, c('PartnerTS=0','OilTS=0'))
M5LH <- linearHypothesis(M5, c('PartnerTS=0','OilTS=0','GasTS=0'))
M6LH.1 <- linearHypothesis(M6, c('PartnerTS=0', 'RemittancesTS=0'))
M6LH <- linearHypothesis(M6, c('PartnerTS=0','OilTS=0','GasTS=0'))
P.ValueM3LH <- M3LH$`Pr(>Chisq)`[2]
P.ValueM4LH <- M4LH$`Pr(>Chisq)`[2]
P.ValueM5LH <- M5LH$`Pr(>Chisq)`[2]
P.ValueM6LH <- M6LH$`Pr(>Chisq)`[2]
P.ValueM6LH.1 <- M6LH.1$`Pr(>Chisq)`[2]
JointHypothesis <- c(P.ValueM3LH,P.ValueM4LH,P.ValueM5LH,P.ValueM6LH,P.ValueM6LH.1)
JointHypothesis <- t(as.matrix(JointHypothesis))
rownames(JointHypothesis) <- 'Joint Hypothesis Tests (P-Values)'
colnames(JointHypothesis) <- c('Model 3','Model 4','Model 5','Model 6', 'Model 6.1')
M6Forecast <- forecast(M6, xreg = xReg4[c(1:12),])
kable(StatTable[c(4,5,6,8,9,12,13),])
par(family = "LM Roman 10")
plot(stl(ArmTS, s.window = 'periodic'), main = 'STI Decomposition of Armenian GDP')
par(family = "LM Roman 10")
plot(stl(RusTS, s.window = 'periodic'), main = 'STI Decomposition of Russian GDP')
kable(CorrMatrix)
par(family = "LM Roman 10")
invisible(acf2(ArmTS))
par(family = "LM Roman 10")
plot(M1)
invisible(acf2(M1$residuals))
par(family = "LM Roman 10")
plot(M2)
invisible(acf2(M2$residuals))
par(family = "LM Roman 10")
plot(M3)
invisible(acf2(M3$residuals))
par(family = "LM Roman 10")
plot(M4)
invisible(acf2(M4$residuals))
par(family = "LM Roman 10")
plot(M5)
invisible(acf2(M5$residuals))
par(family = "LM Roman 10")
plot(M6)
invisible(acf2(M6$residuals))
kable(JointHypothesis)
ShapiroWilk <- c(P.ValueM1, P.ValueM2, P.ValueM3, P.ValueM4, P.ValueM5, P.ValueM6)
ShapiroWilk <- t(as.matrix(ShapiroWilk))
rownames(ShapiroWilk) <- 'Shapiro Wilk Normality Test (P-Values)'
colnames(ShapiroWilk) <- c('Model 1','Model 2','Model 3','Model 4','Model 5','Model 6')
kable(ShapiroWilk)
par(family = "LM Roman 10")
plot(ArmTS, main = 'Armenian GDP', ylab = 'Armenia')
par(family = "LM Roman 10")
plot(PartnerTS, main = 'Export Partners GDP', ylab = 'Export Partner Countries Index')
par(family = "LM Roman 10")
plot(OilTS, main = 'Crude Oil Prices', ylab = 'Oil Prices')
par(family = "LM Roman 10")
plot(GasTS, main = 'Natural Gas Prices', ylab = 'Gas Prices')
data$Fitted <- data$Armenia - M6$residuals
FittedTS <- ts(data$Fitted, start = 2000, frequency = 4)
par(family = "LM Roman 10")
ts.plot(ArmTS, FittedTS, main = 'Actual vs Fitted Armenian GDP',gpars = list(col = c("black", "lightslategray")))
par(family = "LM Roman 10")
plot(forecast(M5, xreg = xReg3[1:12,]), main = 'Forecast Based on Model 6')
C.Values <- GasDFCval
kable(rbind(C.Values, Arm.Stat, Gas.Stat, Oil.Stat, Rem.Stat, Arm.StatL2, Arm.StatL3))
C.Values <- PartnerDFCval
kable(rbind(C.Values, Partner.Stat))
